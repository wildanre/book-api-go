basePath: /api
definitions:
  handlers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handlers.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  models.CreateBookRequest:
    properties:
      author:
        maxLength: 255
        minLength: 1
        type: string
      title:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - author
    - title
    type: object
  models.UpdateBookRequest:
    properties:
      author:
        maxLength: 255
        minLength: 1
        type: string
      title:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - author
    - title
    type: object
host: book-api-go.zeabur.app
info:
  contact:
    email: support@example.com
    name: API Support
  description: This is a simple CRUD API for managing books
  title: Books API
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get a list of all books with optional pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book with title and author
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.CreateBookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update an existing book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update book
      tags:
      - books
schemes:
- https
- http
swagger: "2.0"
